// -*- C++ -*-
//
// $Id$

// ****  Code generated by the The ACE ORB (TAO) IDL Compiler v1.6a_p13 ****
// TAO and the TAO IDL Compiler have been developed by:
//       Center for Distributed Object Computing
//       Washington University
//       St. Louis, MO
//       USA
//       http://www.cs.wustl.edu/~schmidt/doc-center.html
// and
//       Distributed Object Computing Laboratory
//       University of California at Irvine
//       Irvine, CA
//       USA
//       http://doc.ece.uci.edu/
// and
//       Institute for Software Integrated Systems
//       Vanderbilt University
//       Nashville, TN
//       USA
//       http://www.isis.vanderbilt.edu/
//
// Information about TAO is available at:
//     http://www.cs.wustl.edu/~schmidt/TAO.html

// TAO_IDL - Generated from
// be\be_codegen.cpp:135

#ifndef _TAO_IDL_HELLOWORLDTYPESUPPORTC_H_
#define _TAO_IDL_HELLOWORLDTYPESUPPORTC_H_


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include "tao/AnyTypeCode/AnyTypeCode_methods.h"
#include "tao/ORB.h"
#include "tao/SystemException.h"
#include "tao/UserException.h"
#include "tao/Basic_Types.h"
#include "tao/ORB_Constants.h"
#include "dds/DCPS/ZeroCopyInfoSeq_T.h"
#include "dds/DCPS/ZeroCopySeq_T.h"
#include "tao/Object.h"
#include "tao/String_Manager_T.h"
#include "tao/Objref_VarOut_T.h"
#include /**/ "tao/Versioned_Namespace.h"

#include "HelloWorldC.h"
#include "dds/DdsDcpsInfrastructureC.h"
#include "dds/DdsDcpsPublicationC.h"
#include "dds/DdsDcpsSubscriptionExtC.h"
#include "dds/DdsDcpsTopicC.h"
#include "dds/DdsDcpsTypeSupportExtC.h"

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO 

// TAO_IDL - Generated from
// d:\richi\workspace\desarrollo\dds\opendds\instalaciones\opendds3.3\ace_wrappers_x64\tao\tao_idl\be\be_visitor_native/native_ch.cpp:55



typedef ::TAO::DCPS::ZeroCopyDataSeq< HelloWorld, DCPS_ZERO_COPY_SEQ_DEFAULT_SIZE> HelloWorldSeq;


// TAO_IDL - Generated from
// be\be_interface.cpp:644

#if !defined (_HELLOWORLDTYPESUPPORT__VAR_OUT_CH_)
#define _HELLOWORLDTYPESUPPORT__VAR_OUT_CH_

class HelloWorldTypeSupport;
typedef HelloWorldTypeSupport *HelloWorldTypeSupport_ptr;

typedef
  TAO_Objref_Var_T<
      HelloWorldTypeSupport
    >
  HelloWorldTypeSupport_var;

typedef
  TAO_Objref_Out_T<
      HelloWorldTypeSupport
    >
  HelloWorldTypeSupport_out;

#endif /* end #if !defined */

// TAO_IDL - Generated from
// d:\richi\workspace\desarrollo\dds\opendds\instalaciones\opendds3.3\ace_wrappers_x64\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_HELLOWORLDTYPESUPPORT_CH_)
#define _HELLOWORLDTYPESUPPORT_CH_

class  HelloWorldTypeSupport
  : public virtual ::OpenDDS::DCPS::TypeSupport
{
public:
  typedef HelloWorldTypeSupport_ptr _ptr_type;
  typedef HelloWorldTypeSupport_var _var_type;
  typedef HelloWorldTypeSupport_out _out_type;
  
  // The static operations.
  static HelloWorldTypeSupport_ptr _duplicate (HelloWorldTypeSupport_ptr obj);
  
  static void _tao_release (HelloWorldTypeSupport_ptr obj);
  
  static HelloWorldTypeSupport_ptr _narrow (::CORBA::Object_ptr obj);
  static HelloWorldTypeSupport_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static HelloWorldTypeSupport_ptr _nil (void)
  {
    return static_cast<HelloWorldTypeSupport_ptr> (0);
  }
  
  static void _tao_any_destructor (void *);
  
  // TAO_IDL - Generated from
  // d:\richi\workspace\desarrollo\dds\opendds\instalaciones\opendds3.3\ace_wrappers_x64\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:216
  
  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id (void) const;
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Abstract or local interface only.
  HelloWorldTypeSupport (void);
  
  virtual ~HelloWorldTypeSupport (void);

private:
  // Private and unimplemented for concrete interfaces.
  HelloWorldTypeSupport (const HelloWorldTypeSupport &);
  
  void operator= (const HelloWorldTypeSupport &);
};

#endif /* end #if !defined */

// TAO_IDL - Generated from
// d:\richi\workspace\desarrollo\dds\opendds\instalaciones\opendds3.3\ace_wrappers_x64\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:49

extern  ::CORBA::TypeCode_ptr const _tc_HelloWorldTypeSupport;

// TAO_IDL - Generated from
// be\be_interface.cpp:644

#if !defined (_HELLOWORLDDATAWRITER__VAR_OUT_CH_)
#define _HELLOWORLDDATAWRITER__VAR_OUT_CH_

class HelloWorldDataWriter;
typedef HelloWorldDataWriter *HelloWorldDataWriter_ptr;

typedef
  TAO_Objref_Var_T<
      HelloWorldDataWriter
    >
  HelloWorldDataWriter_var;

typedef
  TAO_Objref_Out_T<
      HelloWorldDataWriter
    >
  HelloWorldDataWriter_out;

#endif /* end #if !defined */

// TAO_IDL - Generated from
// d:\richi\workspace\desarrollo\dds\opendds\instalaciones\opendds3.3\ace_wrappers_x64\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_HELLOWORLDDATAWRITER_CH_)
#define _HELLOWORLDDATAWRITER_CH_

class  HelloWorldDataWriter
  : public virtual ::DDS::DataWriter
{
public:
  typedef HelloWorldDataWriter_ptr _ptr_type;
  typedef HelloWorldDataWriter_var _var_type;
  typedef HelloWorldDataWriter_out _out_type;
  
  // The static operations.
  static HelloWorldDataWriter_ptr _duplicate (HelloWorldDataWriter_ptr obj);
  
  static void _tao_release (HelloWorldDataWriter_ptr obj);
  
  static HelloWorldDataWriter_ptr _narrow (::CORBA::Object_ptr obj);
  static HelloWorldDataWriter_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static HelloWorldDataWriter_ptr _nil (void)
  {
    return static_cast<HelloWorldDataWriter_ptr> (0);
  }
  
  static void _tao_any_destructor (void *);
  
  // TAO_IDL - Generated from
  // d:\richi\workspace\desarrollo\dds\opendds\instalaciones\opendds3.3\ace_wrappers_x64\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
  
  virtual ::DDS::InstanceHandle_t register_instance (
      const ::HelloWorld & instance) = 0;
  
  // TAO_IDL - Generated from
  // d:\richi\workspace\desarrollo\dds\opendds\instalaciones\opendds3.3\ace_wrappers_x64\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
  
  virtual ::DDS::InstanceHandle_t register_instance_w_timestamp (
      const ::HelloWorld & instance,
      const ::DDS::Time_t & timestamp) = 0;
  
  // TAO_IDL - Generated from
  // d:\richi\workspace\desarrollo\dds\opendds\instalaciones\opendds3.3\ace_wrappers_x64\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
  
  virtual ::DDS::ReturnCode_t unregister_instance (
      const ::HelloWorld & instance,
      ::DDS::InstanceHandle_t handle) = 0;
  
  // TAO_IDL - Generated from
  // d:\richi\workspace\desarrollo\dds\opendds\instalaciones\opendds3.3\ace_wrappers_x64\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
  
  virtual ::DDS::ReturnCode_t unregister_instance_w_timestamp (
      const ::HelloWorld & instance,
      ::DDS::InstanceHandle_t handle,
      const ::DDS::Time_t & timestamp) = 0;
  
  // TAO_IDL - Generated from
  // d:\richi\workspace\desarrollo\dds\opendds\instalaciones\opendds3.3\ace_wrappers_x64\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
  
  virtual ::DDS::ReturnCode_t write (
      const ::HelloWorld & instance_data,
      ::DDS::InstanceHandle_t handle) = 0;
  
  // TAO_IDL - Generated from
  // d:\richi\workspace\desarrollo\dds\opendds\instalaciones\opendds3.3\ace_wrappers_x64\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
  
  virtual ::DDS::ReturnCode_t write_w_timestamp (
      const ::HelloWorld & instance_data,
      ::DDS::InstanceHandle_t handle,
      const ::DDS::Time_t & source_timestamp) = 0;
  
  // TAO_IDL - Generated from
  // d:\richi\workspace\desarrollo\dds\opendds\instalaciones\opendds3.3\ace_wrappers_x64\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
  
  virtual ::DDS::ReturnCode_t dispose (
      const ::HelloWorld & instance_data,
      ::DDS::InstanceHandle_t instance_handle) = 0;
  
  // TAO_IDL - Generated from
  // d:\richi\workspace\desarrollo\dds\opendds\instalaciones\opendds3.3\ace_wrappers_x64\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
  
  virtual ::DDS::ReturnCode_t dispose_w_timestamp (
      const ::HelloWorld & instance_data,
      ::DDS::InstanceHandle_t instance_handle,
      const ::DDS::Time_t & source_timestamp) = 0;
  
  // TAO_IDL - Generated from
  // d:\richi\workspace\desarrollo\dds\opendds\instalaciones\opendds3.3\ace_wrappers_x64\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
  
  virtual ::DDS::ReturnCode_t get_key_value (
      ::HelloWorld & key_holder,
      ::DDS::InstanceHandle_t handle) = 0;
  
  // TAO_IDL - Generated from
  // d:\richi\workspace\desarrollo\dds\opendds\instalaciones\opendds3.3\ace_wrappers_x64\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
  
  virtual ::DDS::InstanceHandle_t lookup_instance (
      const ::HelloWorld & instance_data) = 0;
  
  // TAO_IDL - Generated from
  // d:\richi\workspace\desarrollo\dds\opendds\instalaciones\opendds3.3\ace_wrappers_x64\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:216
  
  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id (void) const;
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Abstract or local interface only.
  HelloWorldDataWriter (void);
  
  virtual ~HelloWorldDataWriter (void);

private:
  // Private and unimplemented for concrete interfaces.
  HelloWorldDataWriter (const HelloWorldDataWriter &);
  
  void operator= (const HelloWorldDataWriter &);
};

#endif /* end #if !defined */

// TAO_IDL - Generated from
// d:\richi\workspace\desarrollo\dds\opendds\instalaciones\opendds3.3\ace_wrappers_x64\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:49

extern  ::CORBA::TypeCode_ptr const _tc_HelloWorldDataWriter;

// TAO_IDL - Generated from
// be\be_interface.cpp:644

#if !defined (_HELLOWORLDDATAREADER__VAR_OUT_CH_)
#define _HELLOWORLDDATAREADER__VAR_OUT_CH_

class HelloWorldDataReader;
typedef HelloWorldDataReader *HelloWorldDataReader_ptr;

typedef
  TAO_Objref_Var_T<
      HelloWorldDataReader
    >
  HelloWorldDataReader_var;

typedef
  TAO_Objref_Out_T<
      HelloWorldDataReader
    >
  HelloWorldDataReader_out;

#endif /* end #if !defined */

// TAO_IDL - Generated from
// d:\richi\workspace\desarrollo\dds\opendds\instalaciones\opendds3.3\ace_wrappers_x64\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_HELLOWORLDDATAREADER_CH_)
#define _HELLOWORLDDATAREADER_CH_

class  HelloWorldDataReader
  : public virtual ::OpenDDS::DCPS::DataReaderEx
{
public:
  typedef HelloWorldDataReader_ptr _ptr_type;
  typedef HelloWorldDataReader_var _var_type;
  typedef HelloWorldDataReader_out _out_type;
  
  // The static operations.
  static HelloWorldDataReader_ptr _duplicate (HelloWorldDataReader_ptr obj);
  
  static void _tao_release (HelloWorldDataReader_ptr obj);
  
  static HelloWorldDataReader_ptr _narrow (::CORBA::Object_ptr obj);
  static HelloWorldDataReader_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static HelloWorldDataReader_ptr _nil (void)
  {
    return static_cast<HelloWorldDataReader_ptr> (0);
  }
  
  static void _tao_any_destructor (void *);
  
  // TAO_IDL - Generated from
  // d:\richi\workspace\desarrollo\dds\opendds\instalaciones\opendds3.3\ace_wrappers_x64\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
  
  virtual ::DDS::ReturnCode_t read (
      ::HelloWorldSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;
  
  // TAO_IDL - Generated from
  // d:\richi\workspace\desarrollo\dds\opendds\instalaciones\opendds3.3\ace_wrappers_x64\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
  
  virtual ::DDS::ReturnCode_t take (
      ::HelloWorldSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;
  
  // TAO_IDL - Generated from
  // d:\richi\workspace\desarrollo\dds\opendds\instalaciones\opendds3.3\ace_wrappers_x64\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
  
  virtual ::DDS::ReturnCode_t read_w_condition (
      ::HelloWorldSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::ReadCondition_ptr a_condition) = 0;
  
  // TAO_IDL - Generated from
  // d:\richi\workspace\desarrollo\dds\opendds\instalaciones\opendds3.3\ace_wrappers_x64\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
  
  virtual ::DDS::ReturnCode_t take_w_condition (
      ::HelloWorldSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::ReadCondition_ptr a_condition) = 0;
  
  // TAO_IDL - Generated from
  // d:\richi\workspace\desarrollo\dds\opendds\instalaciones\opendds3.3\ace_wrappers_x64\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
  
  virtual ::DDS::ReturnCode_t read_next_sample (
      ::HelloWorld & received_data,
      ::DDS::SampleInfo & sample_info) = 0;
  
  // TAO_IDL - Generated from
  // d:\richi\workspace\desarrollo\dds\opendds\instalaciones\opendds3.3\ace_wrappers_x64\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
  
  virtual ::DDS::ReturnCode_t take_next_sample (
      ::HelloWorld & received_data,
      ::DDS::SampleInfo & sample_info) = 0;
  
  // TAO_IDL - Generated from
  // d:\richi\workspace\desarrollo\dds\opendds\instalaciones\opendds3.3\ace_wrappers_x64\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
  
  virtual ::DDS::ReturnCode_t read_instance (
      ::HelloWorldSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;
  
  // TAO_IDL - Generated from
  // d:\richi\workspace\desarrollo\dds\opendds\instalaciones\opendds3.3\ace_wrappers_x64\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
  
  virtual ::DDS::ReturnCode_t take_instance (
      ::HelloWorldSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;
  
  // TAO_IDL - Generated from
  // d:\richi\workspace\desarrollo\dds\opendds\instalaciones\opendds3.3\ace_wrappers_x64\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
  
  virtual ::DDS::ReturnCode_t read_next_instance (
      ::HelloWorldSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;
  
  // TAO_IDL - Generated from
  // d:\richi\workspace\desarrollo\dds\opendds\instalaciones\opendds3.3\ace_wrappers_x64\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
  
  virtual ::DDS::ReturnCode_t take_next_instance (
      ::HelloWorldSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;
  
  // TAO_IDL - Generated from
  // d:\richi\workspace\desarrollo\dds\opendds\instalaciones\opendds3.3\ace_wrappers_x64\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
  
  virtual ::DDS::ReturnCode_t read_next_instance_w_condition (
      ::HelloWorldSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t previous_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;
  
  // TAO_IDL - Generated from
  // d:\richi\workspace\desarrollo\dds\opendds\instalaciones\opendds3.3\ace_wrappers_x64\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
  
  virtual ::DDS::ReturnCode_t take_next_instance_w_condition (
      ::HelloWorldSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t previous_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;
  
  // TAO_IDL - Generated from
  // d:\richi\workspace\desarrollo\dds\opendds\instalaciones\opendds3.3\ace_wrappers_x64\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
  
  virtual ::DDS::ReturnCode_t return_loan (
      ::HelloWorldSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq) = 0;
  
  // TAO_IDL - Generated from
  // d:\richi\workspace\desarrollo\dds\opendds\instalaciones\opendds3.3\ace_wrappers_x64\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
  
  virtual ::DDS::ReturnCode_t get_key_value (
      ::HelloWorld & key_holder,
      ::DDS::InstanceHandle_t handle) = 0;
  
  // TAO_IDL - Generated from
  // d:\richi\workspace\desarrollo\dds\opendds\instalaciones\opendds3.3\ace_wrappers_x64\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
  
  virtual ::DDS::InstanceHandle_t lookup_instance (
      const ::HelloWorld & instance_data) = 0;
  
  // TAO_IDL - Generated from
  // d:\richi\workspace\desarrollo\dds\opendds\instalaciones\opendds3.3\ace_wrappers_x64\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:216
  
  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id (void) const;
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Abstract or local interface only.
  HelloWorldDataReader (void);
  
  virtual ~HelloWorldDataReader (void);

private:
  // Private and unimplemented for concrete interfaces.
  HelloWorldDataReader (const HelloWorldDataReader &);
  
  void operator= (const HelloWorldDataReader &);
};

#endif /* end #if !defined */

// TAO_IDL - Generated from
// d:\richi\workspace\desarrollo\dds\opendds\instalaciones\opendds3.3\ace_wrappers_x64\tao\tao_idl\be\be_visitor_typecode/typecode_decl.cpp:49

extern  ::CORBA::TypeCode_ptr const _tc_HelloWorldDataReader;

// TAO_IDL - Generated from
// be\be_visitor_traits.cpp:64

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_HELLOWORLDTYPESUPPORT__TRAITS_)
#define _HELLOWORLDTYPESUPPORT__TRAITS_
  
  template<>
  struct  Objref_Traits< ::HelloWorldTypeSupport>
  {
    static ::HelloWorldTypeSupport_ptr duplicate (
        ::HelloWorldTypeSupport_ptr p
      );
    static void release (
        ::HelloWorldTypeSupport_ptr p
      );
    static ::HelloWorldTypeSupport_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::HelloWorldTypeSupport_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */

#if !defined (_HELLOWORLDDATAWRITER__TRAITS_)
#define _HELLOWORLDDATAWRITER__TRAITS_
  
  template<>
  struct  Objref_Traits< ::HelloWorldDataWriter>
  {
    static ::HelloWorldDataWriter_ptr duplicate (
        ::HelloWorldDataWriter_ptr p
      );
    static void release (
        ::HelloWorldDataWriter_ptr p
      );
    static ::HelloWorldDataWriter_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::HelloWorldDataWriter_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */

#if !defined (_HELLOWORLDDATAREADER__TRAITS_)
#define _HELLOWORLDDATAREADER__TRAITS_
  
  template<>
  struct  Objref_Traits< ::HelloWorldDataReader>
  {
    static ::HelloWorldDataReader_ptr duplicate (
        ::HelloWorldDataReader_ptr p
      );
    static void release (
        ::HelloWorldDataReader_ptr p
      );
    static ::HelloWorldDataReader_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::HelloWorldDataReader_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// d:\richi\workspace\desarrollo\dds\opendds\instalaciones\opendds3.3\ace_wrappers_x64\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:54


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, HelloWorldTypeSupport_ptr); // copying
 void operator<<= (::CORBA::Any &, HelloWorldTypeSupport_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, HelloWorldTypeSupport_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// d:\richi\workspace\desarrollo\dds\opendds\instalaciones\opendds3.3\ace_wrappers_x64\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:54


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, HelloWorldDataWriter_ptr); // copying
 void operator<<= (::CORBA::Any &, HelloWorldDataWriter_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, HelloWorldDataWriter_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// d:\richi\workspace\desarrollo\dds\opendds\instalaciones\opendds3.3\ace_wrappers_x64\tao\tao_idl\be\be_visitor_interface/any_op_ch.cpp:54


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, HelloWorldDataReader_ptr); // copying
 void operator<<= (::CORBA::Any &, HelloWorldDataReader_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, HelloWorldDataReader_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be\be_codegen.cpp:1228
#if defined (__ACE_INLINE__)
#include "HelloWorldTypeSupportC.inl"
#endif /* defined INLINE */

#endif /* ifndef */


